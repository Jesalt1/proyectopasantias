Imports System.Data.SqlClient
Imports Microsoft.Office.Interop.Excel

Public Class UserControl1

  'este modulos ya realiza la extracion de datos de una hoja en excel y modifica la base de datos 
    'este sera el modulo a usar y modificar para la extraccion de la base de datos
    'con este solo falta realizar o siguiente:
    '--verificar la fecha en su formato especifico
    '--verifcar que no existan usuarios repetidos
    '--verificar que no existan campos vacios 
    '--generar los Store Procedure para las ytransacciones en masa
    '--realizar las transacciones correspodientes
    Private Sub mnuexportar_Click(sender As Object, e As EventArgs) Handles mnuexportar.Click
        Dim openFileDialog As New OpenFileDialog()
        openFileDialog.Filter = "Archivos de Excel|*.xls;*.xlsx"
        If openFileDialog.ShowDialog() = DialogResult.OK Then
            Dim excelApp As New Application()
            Dim workbook As Workbook = excelApp.Workbooks.Open(openFileDialog.FileName)
            Dim worksheet As Worksheet = DirectCast(workbook.Sheets(1), Worksheet)

            ' Limpiar datos previos en el DataGridView
            DataGridView1.DataSource = Nothing
            dt.Clear()
            dt.Columns.Clear() ' Limpia tambi√©n las columnas del DataTable

            ' Agregar columnas al DataTable
            For col As Integer = 1 To worksheet.UsedRange.Columns.Count
                Dim colName As String = worksheet.Cells(1, col).Value
                dt.Columns.Add(colName)
            Next

            ' Cargar datos al DataTable, omitiendo filas en blanco
            For row As Integer = 2 To worksheet.UsedRange.Rows.Count
                Dim isEmptyRow As Boolean = True
                For col As Integer = 1 To worksheet.UsedRange.Columns.Count
                    Dim cellValue As Object = worksheet.Cells(row, col).Value
                    If cellValue IsNot Nothing AndAlso Not String.IsNullOrWhiteSpace(cellValue.ToString()) Then
                        isEmptyRow = False
                        Exit For
                    End If
                Next

                If Not isEmptyRow Then
                    Dim newRow As DataRow = dt.NewRow()
                    For col As Integer = 1 To worksheet.UsedRange.Columns.Count
                        newRow(col - 1) = worksheet.Cells(row, col).Value
                    Next
                    dt.Rows.Add(newRow)
                End If
            Next

            DataGridView1.DataSource = dt

            excelApp.Quit()
        End If


    End Sub

    Private Sub mnulimpiar_Click(sender As Object, e As EventArgs) Handles mnulimpiar.Click

        Dim connectionString As String = "Data Source=DESKTOP-AGBCSLF\servidor;Initial Catalog=pruebas; ;Integrated Security=True;"
        Dim connection As New SqlConnection(connectionString)
        Dim adapter As New SqlDataAdapter()

        connection.Open()

        For Each row As DataRow In dt.Rows
            Dim cedula As String = row("Cedula").ToString()
            Dim nombre As String = row("Nombre").ToString()
            Dim apellido As String = row("Apellido").ToString()

            Dim commandText As String = "Actualizacion" ' Nombre del procedimiento almacenado
            Dim command As New SqlCommand(commandText, connection)
            command.CommandType = CommandType.StoredProcedure

            command.Parameters.AddWithValue("@Nombre", nombre)
            command.Parameters.AddWithValue("@Apellido", apellido)
            command.Parameters.AddWithValue("@cedula", cedula)

            command.ExecuteNonQuery()
        Next

        connection.Close()
        MessageBox.Show("Datos guardados correctamente.")
    End Sub
